@import "../config/colors";
@import "../config/spacing";
@import "../config/typography";

@import "repetitivo/functions/grid-column-width";

@import "repetitivo/helpers/respond-to";
@import "repetitivo/helpers/styles-from-map";
@import "repetitivo/helpers/styles-from-breakpoint-map";

@import "repetitivo/patterns/grid";

//
// Component: FAQ Section
// ============================================================================
$component-name: "FaqSection";
$component-base: ".#{$component-name}";

$heading-content-styles: (
  default: (
    margin-left: grid-column-width(1, 12),
  ),
  s: (
    margin-left: grid-column-width(2, 12),
    margin-right: grid-column-width(1, 12),
    width: grid-column-width(9, 12),
  ),
  m: (
    margin-left: grid-column-width(3, 12),
    width: grid-column-width(8, 12),
  ),
  l: (
    margin-left: grid-column-width(4, 12),
    width: grid-column-width(7, 12),
  ),
);

$faq-question-number-styles: (
  default: (
    width: auto,
  ),
  pre-s: (
    float: left,
  ),
  s: (
    width: grid-column-width(1, 12),
    margin-left: grid-column-width(1, 12),
  ),
  m: (
    margin-left: grid-column-width(2, 12),
  ),
  l: (
    margin-left: grid-column-width(3, 12),
  ),
);

$faq-question-text-styles: (
  default: (
    width: auto,
  ),
  s: (
    width: grid-column-width(10, 12),
  ),
  m: (
    width: grid-column-width(9, 12),
  ),
  l: (
    width: grid-column-width(8, 12),
  ),
);

$faq-answer-body-styles: (
  default: (
    margin-left: grid-column-width(1, 12),
    width: grid-column-width(11, 12),
  ),
  s: (
    margin-left: grid-column-width(2, 12),
    width: grid-column-width(10, 12),
  ),
  m: (
    margin-left: grid-column-width(3, 12),
    width: grid-column-width(9, 12),
  ),
  l: (
    margin-left: grid-column-width(4, 12),
    width: grid-column-width(8, 12),
  ),
);

$faq-answer-figure-styles: (
  default: (
    margin-left: grid-column-width(1, 12),
    margin-right: 0,
  ),
  s: (
    margin-left: grid-column-width(4, 12),
    width: grid-column-width(8, 12),
  ),
  m: (
    margin-left: grid-column-width(6, 12),
    width: grid-column-width(6, 12),
  ),
);

#{$component-base} {
  @include styles-from-map((
    margin-bottom: $spacing-xxxxxl,
  ));

  // Elements: Heading, FAQ Answer
  // --------------------------------------------------------------------------
  &-heading,
  &-faqAnswer {
    @include grid-container;
    @include grid-container--compensate-padded($spacing-gutters);
  }

  // Elements: Heading Content, FAQ Answer Body
  // --------------------------------------------------------------------------
  &-headingContent,
  &-faqAnswerBody,
  &-faqAnswerFigure {
    @include grid-item;
    @include grid-item--padded($spacing-gutters);
  }

  // Element: Heading
  // --------------------------------------------------------------------------
  &-heading {
    &Content {
      @include styles-from-breakpoint-map($heading-content-styles);
    }
  }

  // Element: Faq
  // --------------------------------------------------------------------------
  &-faq {
    margin: 0;
    padding: 0;
  }

  // Element: Faq Group
  // --------------------------------------------------------------------------
  &-faqGroup {
    &.will-be-active[class] {
      transition: 120ms ease-in;
      transition-property: height opacity;

      background-color: map-get($colors, bg-secondary);

      overflow: hidden;

      #{$component-base}-faqAnswer {
        display: block;
      }
    }

    &.will-be-inactive[class] {
      transition: 120ms ease-out;
      transition-property: height opacity;

      background-color: transparent;

      overflow: hidden;
    }

    &.is-active {
      background-color: map-get($colors, bg-secondary);

      #{$component-base}-faqAnswer {
        display: block;
      }
    }
  }

  // Element: Faq Question
  // --------------------------------------------------------------------------
  &-faqQuestion {
    @include respond-to(s) {
      @include grid-container;
      @include grid-container--compensate-padded($spacing-gutters);
    }

    @include styles-from-map((
      font-size: $hecto-font-size,
      padding-top: $spacing-xs,
      padding-bottom: $spacing-xs
    ));

    @include respond-to(pre-s) {
      display: flex;
    }

    line-height: $hecto-line-height;
    font-weight: normal;
    color: map-get($colors, secondary);

    &Number,
    &Text {
      @include respond-to(s) {
        @include grid-item;

        padding-left: $spacing-gutter-base / 2;
        padding-right: $spacing-gutter-base / 2;
      }
    }

    &Number {
      @include styles-from-breakpoint-map($faq-question-number-styles);

      padding-right: $spacing-gutter-base / 2;
      text-align: right;
    }

    &Text {
      @include styles-from-breakpoint-map($faq-question-text-styles);

      padding-top: 0;
      padding-bottom: 0;

      text-align: inherit;
      font-size: inherit;
      color: inherit;

      cursor: pointer;
      outline: none;

      &:hover,
      &:focus {
        color: inherit;
        font-weight: $bold-font-weight;
      }

      .has-js & {
        text-decoration: underline;
      }
    }
  }

  // Element: Faq Answer
  // --------------------------------------------------------------------------
  &-faqAnswer {
    .has-js & {
      display: none;
    }

    @include styles-from-map((
      padding-bottom: $spacing-xxxxxl,
    ));

    &Body {
      @include styles-from-breakpoint-map($faq-answer-body-styles);
      @include styles-from-map((padding-bottom: $spacing-xxs));
    }

    &Figure {
      $negative-spacing: ();

      @each $breakpoint, $value in $spacing-xxxxxl {
        $negative-spacing: map-merge($negative-spacing, ($breakpoint: -$value));
      }

      @include styles-from-map((
        margin-top: $spacing-l,
        margin-bottom: $negative-spacing
      ));
      @include styles-from-breakpoint-map($faq-answer-figure-styles);

      img {
        width: 100%;
        height: auto;
      }
    }
  }
}
